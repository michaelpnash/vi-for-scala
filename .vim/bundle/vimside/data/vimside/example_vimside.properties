# ============================================================================
# This file, example_vimside.properties will NOT be read by the Vimside code. 
#   To adjust property values, copy this file to a file called 
#   'vimside.properties' in the same dirctory (or into a directory 
#   "data/vimside/" in the runtime-path (see :runtimepath),
#   and then make changes. A file with this name will only be sourced once
#   even if it appears in multiple location, local directory and runtime path.
# ============================================================================

#--------------
# Enable logging
# ensime.log.enabled=1
# vimside.log.enabled=1
#--------------

#--------------
# Output logs and ensime port file to local dir
# If you start Vim is some project sub-directory, this will place
# things in that directory (which may not be what you want).
# vimside.use.cwd.as.output.dir=0
#--------------

#--------------
# Also load project specific options
# vimside.project.options.enabled=1
# vimside.project.property.file.name=vimside.properties
#--------------

#--------------
# Defined Java versions: '1.5', '1.6', '1.7'
# Defined Scala versions: '2.9.2', '2.10.0'
# Minor version numbers not needed
# Scala version MUST match 'ensime.dist.dir' used.
# vimside.java.version="1.7"
# vimside.scala.version="2.10.2"
#--------------

#--------------
# Where is Ensime installed
# ensime.install.path="$HOME/.vim/vim-addons/ensime"
# ensime.install.path="$HOME/vimfiles/vim-addons/ensime"

# Which build version of Ensime to use. 
# Must be directory under 'ensime.install.path' directory
# ensime.dist.dir="ensime_2.9.2-0.9.8.9"
# ensime.dist.dir="ensime_2.10.0-0.9.8.9"

# Or, full path to Ensime build version
# ensime.dist.path="SOME_PATH_TO_ENSIME_BUILD_DIR"
#--------------


#--------------
# The Ensime Config information is in a file called 'ensime_config.vim'
# ensime.config.file.name="ensime_config.vim"
#--------------

#--------------
# To run against one of your own projects
# The Ensime Config  information is in a file called '_ensime'
#  Emacs Ensime calls the file '.ensime' - you can call it 
#  whatever you want as long as you set its name here.
# ensime.config.file.name="_ensime"
#--------------
 
#--------------
# Vimside uses Forms library 
# forms.use=1
#--------------
 
#--------------
# Open source brower in its own tab
# tailor.forms.sourcebrowser.open.in.tab", 1)
#--------------
 
#--------------
# Hover Options
# vimside.hover.balloon.enabled=1
# vimside.hover.term.balloon.enabled=1
# tailor.hover.term.balloon.fg="red"
# tailor.hover.term.balloon.bg="white"
#
# The following Hover Options should normally not be changed
# tailor.hover.updatetime=600
# one character and hover move triggered
# tailor.hover.max.char.mcounter=0
# tailor.hover.cmdline.job.time=300
# tailor.hover.term.job.time=300
#--------------


#--------------
# Selection using 'highlight' or 'visual'
# tailor.expand.selection.information='visual'
#--------------

#--------------
# Search options
# tailor.symbol.search.do.incremental=0
# tailor.symbol.search.close.empty.display=1
# tailor.symbol.search.maximum.return=50
#--------------

#--------------
# Re-order which unix browser command to try first
# tailor.browser.unix.commands=['firefox', 'xdg-open', 'opera']
#--------------

#--------------
# Typecheck file on write
# tailor.type.check.file.on.write=0
#--------------

#--------------
# Refactor rename, extract local and extract metod
# tailor.refactor.rename.pattern.enable=1
# tailor.refactor.rename.pattern='[^ =:;()[\]]\+'
# tailor.refactor.extract.local.pattern.enable=1
# tailor.refactor.extract.local.pattern='[^ =:;()[\]]\+'
# tailor.refactor.extract.method.pattern.enable=1
# tailor.refactor.extract.method.pattern='[^ =:;()[\]]\+'
#--------------


# tailor.symbol.at.point.location.same.file=same_window
# tailor.symbol.at.point.location.same.file=split_window
# tailor.symbol.at.point.location.same.file=vsplit_window

# tailor.symbol.at.point.location.diff.file=same_window
# tailor.symbol.at.point.location.diff.file=split_window
# tailor.symbol.at.point.location.diff.file=vsplit_window
# tailor.symbol.at.point.location.diff.file=tab

 
# tailor.uses.of.symbol.at.point.location=same_window
# tailor.uses.of.symbol.at.point.location=split_window
# tailor.uses.of.symbol.at.point.location=vsplit_window
# tailor.uses.of.symbol.at.point.location=tab

# tailor.repl.config.location=same_window
# tailor.repl.config.location=split_window
# tailor.repl.config.location=vsplit_window
# tailor.repl.config.location=tab
#
# tailor.sbt.config.location=same_window
# tailor.sbt.config.location=split_window
# tailor.sbt.config.location=vsplit_window
# tailor.sbt.config.location=tab
#
# tailor.sbt.use.signs=0

# tailor.show.errors.and.warnings.use.signs=0
# tailor.full.typecheck.finished.use.signs=0
# tailor.uses.of.symbol.at.point.use.signs=0

#--------------
# Sign Option tailoring
#
# sign.quickfix.error.linehl=Error
# sign.quickfix.error.text=E>
# sign.quickfix.error.texthl=Todo
# sign.quickfix.warn.linehl=StatusLine
# sign.quickfix.warn.text=W>
# sign.quickfix.warn.texthl=Todo
# 
# sign.quickfix.info.linehl=DiffAdd
# sign.quickfix.info.text=I>
# sign.quickfix.info.texthl=TODO
# 
# sign.quickfix.marker.linehl=Search
# sign.quickfix.marker.text=M>
# sign.quickfix.marker.texthl=Ignore
# 
# sign.locationlist.info.linehl=DiffAdd
# sign.locationlist.info.text=I>
# sign.locationlist.info.texthl=TODO
# 
# sign.locationlist.marker.linehl=Search
# sign.locationlist.marker.text=M>
# sign.locationlist.marker.texthl=Ignore
# 
# sign.debug.active.linehl=DiffText
# sign.debug.active.text=A>
# sign.debug.active.texthl=SpellCap
# 
# sign.debug.pending.linehl=DiffAdd
# sign.debug.pending.text=P>
# sign.debug.pending.texthl=DiffDelete
# 
# sign.debug.marker.linehl=Search
# sign.debug.marker.text=M>
# sign.debug.marker.texthl=Ignore
#--------------

